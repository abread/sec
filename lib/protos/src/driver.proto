syntax = "proto3";
package driver;

import "util.proto";

message InitialConfigRequest {
    map<uint32, string> id_uri_map = 1;
}

message ServerConfigUpdate {
    uint64 new_epoch = 1;
    uint64 neighbour_faults = 2;
    uint64 server_faults = 3;
}

message EpochUpdateRequest {
    uint64 new_epoch = 1;
    util.Position new_position = 2;
    repeated uint32 visible_neighbour_ids = 3;
    uint64 neighbour_faults = 4;
    uint64 server_faults = 5;
}

// A Malicious Client not only receives the full graph (ie: all neighbours)
// But does not receive a position: they can choose!
//
message MaliciousEpochUpdateRequest {
    uint64 new_epoch = 1;
    repeated util.Neighbour correct_neighbours = 2;
    repeated uint32 malicious_neighbour_ids = 3;
    uint64 neighbour_faults = 4;
    uint64 server_faults = 5;
    uint32 type_code = 6;
}

service CorrectUserDriver {
    rpc initialConfig(InitialConfigRequest) returns (util.Empty);
    rpc updateEpoch(EpochUpdateRequest) returns (util.Empty);
    rpc provePosition(util.Empty) returns (util.Empty);
}

service MaliciousUserDriver {
    rpc initialConfig(InitialConfigRequest) returns (util.Empty);
    rpc updateEpoch(MaliciousEpochUpdateRequest) returns (util.Empty);
    rpc provePosition(util.Empty) returns (util.Empty);
}

service CorrectServerDriver {
    rpc updateConfig(ServerConfigUpdate) returns (util.Empty);
}
